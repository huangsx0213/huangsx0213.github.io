---
layout:     post
title:      "Temp1"
subtitle:   "「 Testing 」" 
date:       2024-11-11 11:00:01
author:     "Vick Huang"
header-img: "img/bg-walle.jpg"
catalog: true
tags:
    - Testing
---



# Splunk完整命令语法与原理解析指南（上）

# 一、基础搜索语法

## 1. 搜索运算符

```splunk
# 1. 布尔运算符
AND OR NOT XOR             # 基本布尔运算
error AND (warn* OR fail*) # 复合布尔运算
error NOT timeout          # 排除特定条件

# 2. 比较运算符
=  !=                      # 等于/不等于
>  <                       # 大于/小于
>=  <=                    # 大于等于/小于等于
IN                        # 包含于列表中
LIKE                      # 模式匹配

# 3. 通配符
*                         # 匹配零个或多个字符
?                         # 匹配单个字符
[]                        # 匹配字符集合
[^]                       # 匹配补集

# 4. 字段运算符
EXISTS                    # 字段存在
NOT EXISTS                # 字段不存在
BETWEEN                   # 范围匹配
```

## 2. 时间语法详解

```splunk
# 1. 相对时间
-<数字><时间单位>
earliest=-1h@h           # 从上个小时开始
latest=-5m              # 到5分钟前
earliest=-24h@h latest=now   # 最近24小时

# 2. 时间单位
s   # 秒
m   # 分钟
h   # 小时
d   # 天
w   # 周
mon # 月
q   # 季度
y   # 年

# 3. 时间修饰符
@d  # 日期边界
@h  # 小时边界
@w  # 周边界
@mon # 月边界

# 4. 时间函数
earliest=relative_time(now(), "-1d@d")
latest=relative_time(now(), "@d")
```

## 3. 字段提取与操作

```splunk
# 1. 字段别名
| rename old_field AS new_field
| rename old_field AS "New Field Name"

# 2. 字段提取
| rex field=_raw "pattern=(?<field_name>.*?)"
| extract field=_raw "pattern"

# 3. 字段计算
| eval new_field=field1 + field2
| eval is_error=if(status>=400, 1, 0)

# 4. 字段转换
| convert timeformat="%Y-%m-%d" ctime(timestamp)
| convert num(string_field)
```

# 二、高级搜索命令

## 1. 统计命令详解

```splunk
# 1. 基础统计
| stats count                # 事件计数
| stats distinct_count(field) # 唯一值计数
| stats values(field)        # 字段所有值
| stats list(field)          # 字段值列表

# 2. 数值统计
| stats sum(field)          # 求和
| stats avg(field)          # 平均值
| stats median(field)       # 中位数
| stats mode(field)         # 众数
| stats stdev(field)        # 标准差
| stats var(field)          # 方差

# 3. 百分位统计
| stats perc<N>(field)      # N百分位数
| stats perc25(field)       # 25分位数
| stats perc50(field)       # 中位数
| stats perc75(field)       # 75分位数
| stats perc90(field)       # 90分位数

# 4. 分组统计
| stats count by field1, field2
| stats sum(value) as total by category
| stats avg(response_time) as avg_rt by endpoint

# 5. 复杂统计
| stats first(field)        # 首次出现值
| stats last(field)         # 最后出现值
| stats range(field)        # 最大值减最小值
| stats earliest(field)     # 最早时间
| stats latest(field)       # 最新时间
```

## 2. 转换命令详解

```splunk
# 1. eval命令高级用法
| eval 
    # 数学运算
    result = number1 + number2,
    product = price * quantity,
    
    # 字符串操作
    full_name = first_name + " " + last_name,
    lower_name = lower(name),
    upper_name = upper(name),
    
    # 条件判断
    status_type = case(
        status >= 500, "error",
        status >= 400, "warning",
        status >= 300, "redirect",
        status >= 200, "success",
        1=1, "unknown"
    ),
    
    # 时间处理
    hour = strftime(_time, "%H"),
    date = strftime(_time, "%Y-%m-%d"),
    
    # 类型转换
    size_mb = round(size/1024/1024, 2),
    is_valid = if(status=200, "true", "false")

# 2. where命令高级用法
| where 
    # 复杂条件
    status>=500 OR response_time>1000,
    
    # 字符串匹配
    like(url, "%.php%"),
    match(user_agent, "Mozilla.*"),
    
    # 数值比较
    value BETWEEN 100 AND 200,
    
    # 字段存在性
    isnotnull(field_name),
    
    # 正则匹配
    match(field, "pattern")

# 3. fields命令
| fields + field1, field2    # 保留字段
| fields - field1, field2    # 排除字段
| fields field1, field2      # 仅保留指定字段

# 4. rename命令
| rename 
    field1 AS "New Field 1",
    field2 AS "New Field 2"
```

## 3. 排序和限制命令

```splunk
# 1. sort命令
| sort field1                # 升序排序
| sort -field1              # 降序排序
| sort limit=100 field1     # 限制结果数
| sort -field1 +field2      # 多字段排序

# 2. head/tail命令
| head 10                   # 前10条结果
| tail 5                    # 后5条结果

# 3. limit命令
| limit 100                 # 限制结果数量
```

## 4. 表格操作命令

```splunk
# 1. table命令
| table field1, field2      # 选择显示字段
| table _time, host, status # 指定字段顺序

# 2. chart命令
| chart count over field    # 基本图表
| chart sum(value) by field # 聚合图表
| chart avg(field) over time by host # 时间序列

# 3. timechart命令
| timechart span=1h count   # 时间序列统计
| timechart span=1d sum(bytes) by host # 按主机统计
```

# 三、高级功能命令

## 1. 事务分析命令

```splunk
# 1. transaction命令
| transaction field1 
    maxspan=5m            # 最大时间跨度
    maxpause=2m          # 最大暂停时间
    startswith="start"   # 开始条件
    endswith="end"       # 结束条件

# 2. 事务属性
| transaction field1
    maxevents=100       # 最大事件数
    maxspan=1h          # 最大跨度
    keepevicted=false   # 保留未完成事务
```

[未完待续，这是第一部分。接下来的部分将包含更多高级命令、实战场景、性能优化和最佳实践等内容。]




# Splunk完整命令语法与原理解析指南（下）

# 四、进阶搜索命令

## 1. 子搜索与连接命令

```splunk
# 1. 子搜索语法
| where [search sourcetype=error | fields host] # 基本子搜索
| append [search sourcetype=warn]              # 追加结果
| join type=inner field1 
    [search sourcetype=other | fields field1, field2] # 内连接

# 2. 连接类型
| join                      # 内连接(仅匹配项)
| join type=left           # 左连接(保留左表)
| join type=outer          # 外连接(保留所有)

# 3. 结果合并
| append                   # 追加结果
| appendcols              # 追加列
| appendpipe              # 追加管道结果
```

## 2. 数据处理命令

```splunk
# 1. 聚合命令
| cluster showcount=true field=message    # 聚类分析
| dedup field1, field2                   # 删除重复
| eventstats                             # 事件级统计

# 2. 数据转换
| untable                  # 表格转行
| xyseries                 # 生成坐标数据
| makemv                   # 生成多值字段
| mvcombine                # 合并多值字段

# 3. 数据清洗
| fillnull                 # 填充空值
| filldown                 # 向下填充
| nomv                     # 展开多值字段
```

## 3. 高级统计命令

```splunk
# 1. 相关性分析
| correlate field1 field2   # 字段相关性
| contingency field1 field2 # 列联表分析

# 2. 趋势分析
| predict field1           # 预测分析
| trendline field1        # 趋势线
| streamstats             # 流式统计

# 3. 异常检测
| outlier                 # 异常值检测
| anomalies              # 异常模式检测
| anomalousvalue         # 异常值识别
```

# 五、实时监控命令

## 1. 实时搜索命令

```splunk
# 1. 实时监控
| realtime                # 实时搜索
| rt                      # 实时简写
| metrics                 # 指标监控

# 2. 告警设置
| alert                   # 设置告警
| sendalert              # 发送告警
| savedsearch            # 保存搜索
```

## 2. 仪表板命令

```splunk
# 1. 可视化命令
| chart                   # 图表显示
| timechart              # 时间序列图
| stats                  # 统计显示

# 2. 格式化命令
| eval _time=strftime(_time, "%Y-%m-%d %H:%M:%S")
| fieldformat            # 字段格式化
| highlight              # 高亮显示
```

# 六、高级应用场景

## 1. 性能分析场景

```splunk
# 1. 响应时间分析
sourcetype=access_logs 
| eval response_time_ms = response_time * 1000
| stats 
    avg(response_time_ms) as avg_rt,
    perc95(response_time_ms) as p95_rt,
    perc99(response_time_ms) as p99_rt
    by endpoint
| where avg_rt > 500
| sort -avg_rt

# 2. 系统资源监控
sourcetype=system_metrics
| eval 
    cpu_used = 100 - cpu_idle,
    memory_used_gb = memory_used / 1024 / 1024 / 1024
| timechart span=5m
    avg(cpu_used) as cpu,
    avg(memory_used_gb) as memory,
    avg(disk_used_percent) as disk
    by host

# 3. 并发用户分析
sourcetype=access_logs
| bucket _time span=1m
| stats dc(user_id) as concurrent_users by _time
| timechart span=1m 
    avg(concurrent_users) as avg_users
    max(concurrent_users) as peak_users
```

## 2. 错误分析场景

```splunk
# 1. 错误分布分析
sourcetype=error_logs
| rex field=stack_trace "(?<error_type>[^:]+): (?<error_message>.*)"
| stats 
    count as error_count,
    values(stack_trace) as stack_traces,
    values(_time) as error_times
    by error_type
| sort -error_count

# 2. 错误趋势分析
sourcetype=error_logs
| timechart span=1h 
    count as error_count
    by error_level
| eval error_rate = round(error_count/total_requests * 100, 2)

# 3. 关联错误分析
sourcetype=error_logs
| transaction request_id maxspan=5m
| stats 
    count as error_count,
    values(error_message) as messages,
    values(component) as components
    by request_id
| where error_count > 1
```

## 3. 安全分析场景

```splunk
# 1. 登录异常检测
sourcetype=auth_logs
| stats 
    count as attempt_count,
    dc(src_ip) as ip_count
    by user
| where attempt_count > 10
| sort -attempt_count

# 2. IP行为分析
sourcetype=access_logs
| stats 
    count as request_count,
    dc(uri_path) as unique_paths,
    dc(user_agent) as unique_agents
    by src_ip
| where request_count > 1000
| sort -request_count

# 3. 敏感操作审计
sourcetype=audit_logs action IN ("delete", "modify", "grant")
| stats 
    count as action_count,
    values(target) as affected_resources
    by user, action
| sort -action_count
```

# 七、性能优化原理

## 1. 搜索优化原理

```splunk
# 1. 索引优化
index=main sourcetype=access_logs  # 使用索引
NOT index=_*                      # 排除内部索引

# 2. 时间优化
earliest=-4h latest=now          # 限制时间范围
_index_earliest=-4h              # 索引时间限制

# 3. 字段优化
host=webserver*                  # 使用前缀
sourcetype IN (type1, type2)     # 使用IN语句
```

## 2. 性能优化技巧

```splunk
# 1. 数据模型优化
| datamodel Model search         # 使用数据模型
| tstats                        # 加速统计

# 2. 缓存优化
| sistats                       # 使用摘要索引
| centrify                     # 集中式缓存

# 3. 分布式优化
| parallel                     # 并行处理
| distribute                   # 分布式执行
```

# 八、最佳实践与原理解析

## 1. 命令执行原理

1. 搜索处理流程：
   - 解析搜索语句
   - 分发到索引器
   - 合并结果
   - 应用转换命令

2. 数据流处理：
   - 事件生成
   - 字段提取
   - 命令管道
   - 结果呈现

## 2. 优化建议

1. 搜索优化：
   - 使用精确的索引和sourcetype
   - 合理的时间范围
   - 避免使用通配符开头
   - 使用字段而非全文搜索

2. 命令优化：
   - 先过滤后统计
   - 使用适当的统计命令
   - 避免复杂子搜索
   - 合理使用缓存

3. 资源使用：
   - 控制并发搜索
   - 监控资源消耗
   - 使用摘要索引
   - 优化数据模型

## 3. 故障排查

1. 常见问题：
   - 搜索超时
   - 内存不足
   - 结果不准确
   - 性能下降

2. 解决方案：
   - 优化搜索语句
   - 增加资源配置
   - 使用加速选项
   - 建立监控告警

这份完整的指南涵盖了Splunk的主要命令语法和使用原理。建议：

1. 循序渐进学习
2. 多进行实践
3. 理解底层原理
4. 注重性能优化
5. 建立知识体系

如需深入了解特定领域，可以进一步探讨。